[gcode_macro clean_nozzle]
variable_purge_len:           15  	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           100	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      210	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:           1.5            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:          5              ; Dwell/wait time, in seconds, after purging and retracting.

variable_brush_top:            0

variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              2	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        30000           ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         4000	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        10000	         ; Nozzle wipe speed in mm/min.

variable_brush_start:     55

variable_brush_width:          40	

variable_bucket_left_width:    22
variable_bucket_right_width:   20            
variable_bucket_gap:           46	
variable_bucket_start: 29

variable_bucket_pos:            1	        

gcode:
   {% if "xyz" in printer.toolhead.homed_axes %}
      SAVE_GCODE_STATE NAME=clean_nozzle

      {% set z_offset = printer.gcode_move.homing_origin.z %}
      SET_GCODE_OFFSET Z=0 MOVE=1

      G90
      {% set Ry = 300 %}

      ### Randomly select left or right bin for purge. 0 = left, 1 = right
      SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE=0

      ### Raise Z for travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}

      ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
      G1 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

      G1 Y{Ry} F{prep_spd_xy}

      ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
      ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
      {% if params.SKIP_PURGE|default(0)|int == 0 %}
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
         {% endif %}
      {% endif %}

   
      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start + (brush_width * bucket_pos)} F{prep_spd_xy}

      G1 Y{Ry}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% set WIPE_Y_MOVEMENT = -4 %} # move -4mm in Y during wipes
      {% set y_offset = WIPE_Y_MOVEMENT / wipe_qty %}
      {% for wipe in range(1, (wipe_qty + 1)) %}
         {% set y_target = Ry + (wipe * y_offset) %}
         G1 X{brush_start + (brush_width * (1 - bucket_pos))} Y{Ry + (wipe * y_offset) - (y_offset / 2)} F{wipe_spd_xy}
         G1 X{brush_start + (brush_width * bucket_pos)} Y{Ry + (wipe * y_offset)} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}


      SET_GCODE_OFFSET Z={z_offset} MOVE=1

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}
      { action_raise_error("Please home your axes!") }
      M117 Please home first!
   {% endif %}